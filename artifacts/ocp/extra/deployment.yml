kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    application: "sso"
  name: "sso"
spec:
  replicas: 1
  selector:
    #deploymentConfig: "sso"
    matchLabels:
      application: "sso"
  #strategy:
    #type: Recreate
  template:
    metadata:
      labels:
        application: "sso"
        #deploymentConfig: "sso"
      name: "sso"
    spec:
      containers:
      - env:
        - name: SSO_HOSTNAME
          value: "{{ .Values.ssoHostname }}"
        - name: DB_MIN_POOL_SIZE
          value: "{{ .Values.dbMinPoolSize }}"
        - name: DB_MAX_POOL_SIZE
          value: "{{ .Values.dbMaxPoolSize }}"
        - name: DB_TX_ISOLATION
          value: "{{ .Values.dbTxIsolation }}"
        - name: JGROUPS_PING_PROTOCOL
          value: openshift.DNS_PING
        - name: OPENSHIFT_DNS_PING_SERVICE_NAME
          value: "sso-ping"
        - name: OPENSHIFT_DNS_PING_SERVICE_PORT
          value: '8888'
        - name: X509_CA_BUNDLE
          value: "/var/run/configmaps/service-ca/service-ca.crt /var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        - name: JGROUPS_CLUSTER_PASSWORD
          value: "{{ .Values.jgroupsClusterPassword }}"
        - name: SSO_ADMIN_USERNAME
          value: "{{ .Values.ssoAdminUsername }}"
        - name: SSO_ADMIN_PASSWORD
          value: "{{ .Values.ssoAdminPassword }}"
        - name: SSO_REALM
          value: "{{ .Values.ssoRealm }}"
        - name: SSO_SERVICE_USERNAME
          value: "{{ .Values.ssoServiceUsername }}"
        - name: SSO_SERVICE_PASSWORD
          value: "{{ .Values.ssoServicePassword }}"
        - name: DB_JDBC_URL
          valueFrom:
            configMapKeyRef:
              key: DB_JDBC_URL
              name: sso-database-cm
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: DB_USERNAME
              name: sso-database-secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: sso-database-secret
        #image: "sso"
        image: registry.abanca.com/abanca/ksso/redhat-sso:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - "/bin/bash"
            - "-c"
            - "/opt/eap/bin/livenessProbe.sh"
          initialDelaySeconds: 360
          timeoutSeconds: 3
        name: "sso"
        ports:
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 8888
          name: ping
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - "/bin/bash"
            - "-c"
            - "/opt/eap/bin/readinessProbe.sh"
          initialDelaySeconds: 10
          timeoutSeconds: 3
        resources:
          limits:
            memory: "{{ .Values.memoryLimit }}"
        volumeMounts:
        - mountPath: "/etc/x509/https"
          name: sso-x509-https-volume
          readOnly: true
        - mountPath: "/etc/x509/jgroups"
          name: sso-x509-jgroups-volume
          readOnly: true
        - mountPath: "/var/run/configmaps/service-ca"
          name: service-ca
          readOnly: true
        - mountPath: "/mnt/rh-sso"
          name: sso-probe-netrc-volume
          readOnly: false
        - mountPath: "/opt/eap/extensions/actions.cli"
          name: actions-cli-cm
          subPath: actions.cli
        - mountPath: "/opt/eap/themes/mytheme/login/messages/messages_pl.properties"
          name: logging-messages-pl-cm
          subPath: messages_pl.properties
      terminationGracePeriodSeconds: 75
      volumes:
      - name: sso-x509-https-volume
        secret:
          secretName: sso-x509-https-secret
      - name: sso-x509-jgroups-volume
        secret:
          secretName: sso-x509-jgroups-secret
      - configMap:
          name: "sso-service-ca"
        name: service-ca
      - emptyDir:
          medium: Memory
        name: sso-probe-netrc-volume
      - configMap:
          defaultMode: 420
          items:
          - key: actions.cli
            path: actions.cli
          name: actions-cli-cm
        name: actions-cli-cm
      - configMap:
          defaultMode: 420
          items:
          - key: messages_pl.properties
            path: messages_pl.properties
          name: logging-messages-pl-cm
        name: logging-messages-pl-cm
#-------------------------------------------------
#   triggers:
#   - imageChangeParams:
#       automatic: true
#       containerNames:
#       - "sso"
#       from:
#         kind: ImageStreamTag
#         name: rhsso:latest
#         namespace: "xxd-ksso-redhat-sso"
#     type: ImageChange
#   - type: ConfigChange